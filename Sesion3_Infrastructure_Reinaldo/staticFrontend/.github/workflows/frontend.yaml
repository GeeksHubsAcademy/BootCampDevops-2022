# This is a basic workflow to help you get started with Actions

name: 'Deploy and Destroy Static Solutions S3 + CloudFront'

# Controls when the action will run. 
on:
  # Triggers the workflow on push or pull request events but only for the main branch
  push:
    branches: 
      - stg 
      - main

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  terraform:
    name: 'terraform apply'
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    env:
      AWS_S3_BUCKET: 'devopsgeekshubsacademy.click'

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - name: Checkout
        uses: actions/checkout@v2
      
      # Configure aws credentials
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.FE_AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.FE_AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1
          
      # Runs terraform stack
      # CloudFornt
      - name: 'Terraform Init CDN CloudFront'
        uses: hashicorp/terraform-github-actions@master
        with:
          tf_actions_version: 1.0.2
          tf_actions_subcommand: 'init'
          tf_actions_working_dir: 'cloudfront'
          tf_actions_comment: true
      - name: 'Terraform fmt CDN CloudFront'
        if: github.ref == 'refs/heads/stg'
        uses: hashicorp/terraform-github-actions@master
        with:
          tf_actions_version: 1.0.2
          tf_actions_subcommand: 'validate'
          tf_actions_working_dir: 'cloudfront'
          tf_actions_comment: true
      - name: 'Terraform plan CDN CloudFront'
        if: github.ref == 'refs/heads/stg'
        uses: hashicorp/terraform-github-actions@master
        with:
          tf_actions_version: 1.0.2
          tf_actions_subcommand: 'plan'
          tf_actions_working_dir: 'cloudfront'
          tf_actions_comment: true
      - name: 'Terraform apply CDN CloudFront'
        if: github.ref == 'refs/heads/stg'
        uses: hashicorp/terraform-github-actions@master
        with:
          tf_actions_version: 1.0.2
          tf_actions_subcommand: 'apply'
          tf_actions_working_dir: 'cloudfront'
          tf_actions_comment: true
          args: '--auto-approve'

      - uses: jakejarvis/s3-sync-action@master
        if: github.ref == 'refs/heads/stg'
        with:
          args: --delete
        env:
          AWS_S3_BUCKET: ${{ env.AWS_S3_BUCKET }}
          AWS_ACCESS_KEY_ID: ${{ secrets.FE_AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.FE_AWS_SECRET_ACCESS_KEY }}
          AWS_REGION: 'us-east-1'
          SOURCE_DIR: 'app'

      - name: 'Flush cache cloudfront'
        if: github.ref == 'refs/heads/stg'
        run: |
          ID=$(aws cloudfront list-distributions --query 'DistributionList.Items[*].{id:Id,origin:Origins.Items[0].id}[?origin==${{ env.AWS_S3_BUCKET }}.s3.amazonaws.com].id' --output text)
          aws cloudfront create-invalidation --distribution-id $ID --paths "/*"

      # Destroy Infra
      - name: 'Remove static website with the AWS CLI'
        if: github.ref == 'refs/heads/main'
        run: |
          aws s3 rm s3://${{ env.AWS_S3_BUCKET }} --recursive

      - name: 'Terraform destroy CDN CloudFront'
        if: github.ref == 'refs/heads/main'
        uses: hashicorp/terraform-github-actions@master
        with:
          tf_actions_version: 1.0.2
          tf_actions_subcommand: 'destroy'
          tf_actions_working_dir: 'cloudfront'
          tf_actions_comment: true
          args: '--auto-approve'



